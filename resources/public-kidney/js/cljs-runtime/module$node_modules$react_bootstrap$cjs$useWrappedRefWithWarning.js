shadow$provide.module$node_modules$react_bootstrap$cjs$useWrappedRefWithWarning=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=function(ref,componentName){var warningRef=(0,_react.useCallback)(function(refValue){null!=refValue&&refValue.isReactComponent?(0,_invariant.default)(!1,componentName+" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element"):
void 0},[componentName]);return(0,_useMergedRefs.default)(warningRef,ref)};var _invariant=global(require("module$node_modules$invariant$browser")),_react=require("module$node_modules$react$index"),_useMergedRefs=global(require("module$node_modules$react_bootstrap$node_modules$$restart$hooks$cjs$useMergedRefs"));module.exports=exports["default"]}
//# sourceMappingURL=module$node_modules$react_bootstrap$cjs$useWrappedRefWithWarning.js.map
