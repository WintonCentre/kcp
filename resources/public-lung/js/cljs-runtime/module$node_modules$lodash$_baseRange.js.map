{
"version":3,
"file":"module$node_modules$lodash$_baseRange.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAE9FC,WAAaC,IAAKC,CAAAA,IAF4E,CAG9FC,UAAYF,IAAKG,CAAAA,GAyBrBN,OAAOC,CAAAA,OAAP,CAZAM,QAAkB,CAACC,KAAD,CAAQC,GAAR,CAAaC,IAAb,CAAmBC,SAAnB,CAA8B,CAAA,IAC1CC,MAAQ,CAAC,CACTC,IAAAA,CAASR,SAAA,CAAUH,UAAA,EAAYO,GAAZ,CAAkBD,KAAlB,GAA4BE,IAA5B,EAAoC,CAApC,EAAV,CAAmD,CAAnD,CAGb,KAJA,IAEII,OAASC,KAAA,CAAMF,GAAN,CAEb,CAAOA,GAAA,EAAP,CAAA,CACEC,MAAA,CAAOH,SAAA,CAAYE,GAAZ,CAAqB,EAAED,KAA9B,CACA,CADuCJ,KACvC,CAAAA,KAAA,EAASE,IAEX,OAAOI,OATuC,CAhBkD;",
"sources":["node_modules/lodash/_baseRange.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseRange\"] = function(global,require,module,exports) {\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n\n};"],
"names":["shadow$provide","global","require","module","exports","nativeCeil","Math","ceil","nativeMax","max","baseRange","start","end","step","fromRight","index","length","result","Array"]
}
