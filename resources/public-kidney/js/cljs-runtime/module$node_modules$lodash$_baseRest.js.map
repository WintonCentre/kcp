{
"version":3,
"file":"module$node_modules$lodash$_baseRest.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC7FC,SAAWH,OAAA,CAAQ,qCAAR,CADkF,CAE7FI,SAAWJ,OAAA,CAAQ,sCAAR,CAFkF,CAG7FK,YAAcL,OAAA,CAAQ,yCAAR,CAclBC,OAAOC,CAAAA,OAAP,CAJAI,QAAiB,CAACC,IAAD,CAAOC,KAAP,CAAc,CAC7B,MAAOH,YAAA,CAAYD,QAAA,CAASG,IAAT,CAAeC,KAAf,CAAsBL,QAAtB,CAAZ,CAA6CI,IAA7C,CAAoD,EAApD,CADsB,CAbkE;",
"sources":["node_modules/lodash/_baseRest.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseRest\"] = function(global,require,module,exports) {\nvar identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n};"],
"names":["shadow$provide","global","require","module","exports","identity","overRest","setToString","baseRest","func","start"]
}
