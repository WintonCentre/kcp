shadow$provide.module$node_modules$react_overlays$cjs$Dropdown=function(global,require,module,exports){function useRefWithUpdate(){var forceUpdate=(0,_useForceUpdate["default"])(),ref=(0,_react.useRef)(null),attachRef=(0,_react.useCallback)(function(element){ref.current=element;forceUpdate()},[forceUpdate]);return[ref,attachRef]}function Dropdown(_ref){var drop=_ref.drop,alignEnd=_ref.alignEnd,_ref$itemSelector=_ref.itemSelector,itemSelector=void 0===_ref$itemSelector?"* \x3e *":_ref$itemSelector,
focusFirstItemOnShow=_ref.focusFirstItemOnShow;_ref$itemSelector=_ref.children;_ref=(0,_uncontrollable.useUncontrolledProp)(_ref.show,_ref.defaultShow,_ref.onToggle);var show=_ref[0],onToggle=_ref[1];_ref=useRefWithUpdate();var menuRef=_ref[0],setMenu=_ref[1],menuElement=menuRef.current;_ref=useRefWithUpdate();var toggleRef=_ref[0],setToggle=_ref[1],toggleElement=toggleRef.current;_ref=(0,_usePrevious["default"])(show);var lastSourceEvent=(0,_react.useRef)(null),focusInDropdown=(0,_react.useRef)(!1),
toggle=(0,_react.useCallback)(function(nextShow,event){onToggle(nextShow,event)},[onToggle]),context=(0,_react.useMemo)(function(){return{toggle,drop,show,alignEnd,menuElement,toggleElement,setMenu,setToggle}},[toggle,drop,show,alignEnd,menuElement,toggleElement,setMenu,setToggle]);menuElement&&_ref&&!show&&(focusInDropdown.current=menuElement.contains(document.activeElement));var focusToggle=(0,_useEventCallback["default"])(function(){toggleElement&&toggleElement.focus&&toggleElement.focus()}),maybeFocusFirst=
(0,_useEventCallback["default"])(function(){var type=lastSourceEvent.current,focusType=focusFirstItemOnShow;null==focusType&&(focusType=menuRef.current&&(0,_matches["default"])(menuRef.current,"[role\x3dmenu]")?"keyboard":!1);!1===focusType||"keyboard"===focusType&&!/^key.+$/.test(type)||(type=(0,_querySelectorAll["default"])(menuRef.current,itemSelector)[0])&&type.focus&&type.focus()});(0,_react.useEffect)(function(){show?maybeFocusFirst():focusInDropdown.current&&(focusInDropdown.current=!1,focusToggle())},
[show,focusInDropdown,focusToggle,maybeFocusFirst]);(0,_react.useEffect)(function(){lastSourceEvent.current=null});var getNextFocusedChild=function(current,offset){if(!menuRef.current)return null;var items=(0,_querySelectorAll["default"])(menuRef.current,itemSelector);current=items.indexOf(current)+offset;current=Math.max(0,Math.min(current,items.length));return items[current]};(0,_useGlobalListener["default"])("keydown",function(event){var _menuRef$current,_toggleRef$current,key=event.key,target=
event.target,fromMenu=null==(_menuRef$current=menuRef.current)?void 0:_menuRef$current.contains(target);_menuRef$current=null==(_toggleRef$current=toggleRef.current)?void 0:_toggleRef$current.contains(target);if(!/input|textarea/i.test(target.tagName)||!(" "===key||"Escape"!==key&&fromMenu))if(fromMenu||_menuRef$current)if(menuRef.current||"Tab"!==key)switch(lastSourceEvent.current=event.type,key){case "ArrowUp":(_toggleRef$current=getNextFocusedChild(target,-1))&&_toggleRef$current.focus&&_toggleRef$current.focus();
event.preventDefault();break;case "ArrowDown":event.preventDefault();show?(_toggleRef$current=getNextFocusedChild(target,1))&&_toggleRef$current.focus&&_toggleRef$current.focus():onToggle(!0,event);break;case "Tab":(0,_addEventListener["default"])(document,"keyup",function(e){var _menuRef$current2;("Tab"!==e.key||e.target)&&null!=(_menuRef$current2=menuRef.current)&&_menuRef$current2.contains(e.target)||onToggle(!1,event)},{once:!0});break;case "Escape":event.preventDefault(),event.stopPropagation(),
onToggle(!1,event)}});return _react["default"].createElement(_DropdownContext["default"].Provider,{value:context},_ref$itemSelector)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports["default"]=void 0;var _matches=_interopRequireDefault(require("module$node_modules$dom_helpers$cjs$matches")),_querySelectorAll=_interopRequireDefault(require("module$node_modules$dom_helpers$cjs$querySelectorAll")),
_addEventListener=_interopRequireDefault(require("module$node_modules$dom_helpers$cjs$addEventListener")),_react=global(require("module$node_modules$react$index")),_propTypes=_interopRequireDefault(require("module$node_modules$prop_types$index")),_uncontrollable=require("module$node_modules$uncontrollable$lib$cjs$index"),_usePrevious=_interopRequireDefault(require("module$node_modules$react_overlays$node_modules$$restart$hooks$cjs$usePrevious")),_useForceUpdate=_interopRequireDefault(require("module$node_modules$react_overlays$node_modules$$restart$hooks$cjs$useForceUpdate")),
_useGlobalListener=_interopRequireDefault(require("module$node_modules$react_overlays$node_modules$$restart$hooks$cjs$useGlobalListener")),_useEventCallback=_interopRequireDefault(require("module$node_modules$react_overlays$node_modules$$restart$hooks$cjs$useEventCallback")),_DropdownContext=_interopRequireDefault(require("module$node_modules$react_overlays$cjs$DropdownContext"));global=_interopRequireDefault(require("module$node_modules$react_overlays$cjs$DropdownMenu"));require=_interopRequireDefault(require("module$node_modules$react_overlays$cjs$DropdownToggle"));
_interopRequireDefault={children:_propTypes["default"].node,drop:_propTypes["default"].oneOf(["up","left","right","down"]),focusFirstItemOnShow:_propTypes["default"].oneOf([!1,!0,"keyboard"]),itemSelector:_propTypes["default"].string,alignEnd:_propTypes["default"].bool,show:_propTypes["default"].bool,defaultShow:_propTypes["default"].bool,onToggle:_propTypes["default"].func};Dropdown.displayName="ReactOverlaysDropdown";Dropdown.propTypes=_interopRequireDefault;Dropdown.Menu=global["default"];Dropdown.Toggle=
require["default"];exports["default"]=Dropdown;module.exports=exports.default}
//# sourceMappingURL=module$node_modules$react_overlays$cjs$Dropdown.js.map
