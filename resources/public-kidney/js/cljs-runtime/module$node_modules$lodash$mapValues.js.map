{
"version":3,
"file":"module$node_modules$lodash$mapValues.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC7FC,gBAAkBH,OAAA,CAAQ,6CAAR,CAD2E,CAE7FI,WAAaJ,OAAA,CAAQ,wCAAR,CAFgF,CAG7FK,aAAeL,OAAA,CAAQ,0CAAR,CAwCnBC,OAAOC,CAAAA,OAAP,CAVAI,QAAkB,CAACC,eAAD,CAASC,QAAT,CAAmB,CACnC,IAAIC,OAAS,EACbD,SAAA,CAAWH,YAAA,CAAaG,QAAb,CAAuB,CAAvB,CAEXJ,WAAA,CAAWG,eAAX,CAAmB,QAAQ,CAACG,KAAD,CAAQC,GAAR,CAAaJ,MAAb,CAAqB,CAC9CJ,eAAA,CAAgBM,MAAhB,CAAwBE,GAAxB,CAA6BH,QAAA,CAASE,KAAT,CAAgBC,GAAhB,CAAqBJ,MAArB,CAA7B,CAD8C,CAAhD,CAGA;MAAOE,OAP4B,CAjC4D;",
"sources":["node_modules/lodash/mapValues.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$mapValues\"] = function(global,require,module,exports) {\nvar baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseAssignValue","baseForOwn","baseIteratee","mapValues","object","iteratee","result","value","key"]
}
