{
"version":3,
"file":"module$node_modules$lodash$property.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC5FC,aAAeH,OAAA,CAAQ,0CAAR,CAD6E,CAE5FI,iBAAmBJ,OAAA,CAAQ,8CAAR,CAFyE,CAG5FK,MAAQL,OAAA,CAAQ,mCAAR,CAHoF,CAI5FM,MAAQN,OAAA,CAAQ,mCAAR,CA4BZC,OAAOC,CAAAA,OAAP,CAJAK,QAAiB,CAACC,IAAD,CAAO,CACtB,MAAOH,MAAA,CAAMG,IAAN,CAAA,CAAcL,YAAA,CAAaG,KAAA,CAAME,IAAN,CAAb,CAAd,CAA0CJ,gBAAA,CAAiBI,IAAjB,CAD3B,CA5BwE;",
"sources":["node_modules/lodash/property.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$property\"] = function(global,require,module,exports) {\nvar baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseProperty","basePropertyDeep","isKey","toKey","property","path"]
}
