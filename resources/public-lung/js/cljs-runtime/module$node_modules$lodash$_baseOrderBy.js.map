{
"version":3,
"file":"module$node_modules$lodash$_baseOrderBy.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAChGC,SAAWH,OAAA,CAAQ,sCAAR,CADqF,CAEhGI,QAAUJ,OAAA,CAAQ,qCAAR,CAFsF,CAGhGK,aAAeL,OAAA,CAAQ,0CAAR,CAHiF,CAIhGM,QAAUN,OAAA,CAAQ,qCAAR,CAJsF,CAKhGO,WAAaP,OAAA,CAAQ,wCAAR,CALmF,CAMhGQ,UAAYR,OAAA,CAAQ,uCAAR,CANoF,CAOhGS,gBAAkBT,OAAA,CAAQ,6CAAR,CAP8E;AAQhGU,SAAWV,OAAA,CAAQ,qCAAR,CARqF,CAShGW,QAAUX,OAAA,CAAQ,oCAAR,CAwCdC,OAAOC,CAAAA,OAAP,CA7BAU,QAAoB,CAACC,mBAAD,CAAaC,SAAb,CAAwBC,MAAxB,CAAgC,CAEhDD,SAAA,CADEA,SAAUE,CAAAA,MAAd,CACcb,QAAA,CAASW,SAAT,CAAoB,QAAQ,CAACG,QAAD,CAAW,CACjD,MAAIN,QAAA,CAAQM,QAAR,CAAJ,CACS,QAAQ,CAACC,KAAD,CAAQ,CACrB,MAAOd,QAAA,CAAQc,KAAR,CAAmC,CAApB,GAAAD,QAASD,CAAAA,MAAT,CAAwBC,QAAA,CAAS,CAAT,CAAxB,CAAsCA,QAArD,CADc,CADzB,CAKOA,QAN0C,CAAvC,CADd,CAUc,CAACP,QAAD,CAGd,KAAIS,MAAQ,CAAC,CACbL,UAAA,CAAYX,QAAA,CAASW,SAAT,CAAoBN,SAAA,CAAUH,YAAV,CAApB,CAERe,oBAAAA,CAASd,OAAA,CAAQO,mBAAR,CAAoB,QAAQ,CAACK,KAAD,CAAQG,GAAR,CAAaR,UAAb,CAAyB,CAIhE,MAAO,CAAE,SAHMV,QAAAmB,CAASR,SAATQ;AAAoB,QAAQ,CAACL,QAAD,CAAW,CACpD,MAAOA,SAAA,CAASC,KAAT,CAD6C,CAAvCI,CAGR,CAAwB,MAAS,EAAEH,KAAnC,CAAmDD,KAAnD,CAJyD,CAArD,CAOb,OAAOX,WAAA,CAAWa,mBAAX,CAAmB,QAAQ,CAACG,MAAD,CAASC,KAAT,CAAgB,CAChD,MAAOf,gBAAA,CAAgBc,MAAhB,CAAwBC,KAAxB,CAA+BT,MAA/B,CADyC,CAA3C,CAxB2C,CApBgD;",
"sources":["node_modules/lodash/_baseOrderBy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseOrderBy\"] = function(global,require,module,exports) {\nvar arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","isArray","baseOrderBy","collection","iteratees","orders","length","iteratee","value","index","result","key","criteria","object","other"]
}
