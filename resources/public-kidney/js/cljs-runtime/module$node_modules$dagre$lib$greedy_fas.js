shadow$provide.module$node_modules$dagre$lib$greedy_fas=function(global,require,module,exports){function doGreedyFAS(g,buckets,zeroIdx){for(var results=[],sources=buckets[buckets.length-1],sinks=buckets[0],entry;g.nodeCount();){for(;entry=sinks.dequeue();)removeNode(g,buckets,zeroIdx,entry);for(;entry=sources.dequeue();)removeNode(g,buckets,zeroIdx,entry);if(g.nodeCount())for(var i=buckets.length-2;0<i;--i)if(entry=buckets[i].dequeue()){results=results.concat(removeNode(g,buckets,zeroIdx,entry,!0));
break}}return results}function removeNode(g,buckets,zeroIdx,entry,collectPredecessors){var results=collectPredecessors?[]:void 0;_.forEach(g.inEdges(entry.v),function(edge){var weight=g.edge(edge),uEntry=g.node(edge.v);collectPredecessors&&results.push({v:edge.v,w:edge.w});uEntry.out-=weight;assignBucket(buckets,zeroIdx,uEntry)});_.forEach(g.outEdges(entry.v),function(edge){var weight=g.edge(edge);edge=g.node(edge.w);edge["in"]-=weight;assignBucket(buckets,zeroIdx,edge)});g.removeNode(entry.v);return results}
function buildState(g,weightFn){var fasGraph=new Graph,maxIn=0,maxOut=0;_.forEach(g.nodes(),function(v){fasGraph.setNode(v,{v,"in":0,out:0})});_.forEach(g.edges(),function(e){var prevWeight=fasGraph.edge(e.v,e.w)||0,weight=weightFn(e);fasGraph.setEdge(e.v,e.w,prevWeight+weight);maxOut=Math.max(maxOut,fasGraph.node(e.v).out+=weight);maxIn=Math.max(maxIn,fasGraph.node(e.w)["in"]+=weight)});var buckets=_.range(maxOut+maxIn+3).map(function(){return new List}),zeroIdx=maxIn+1;_.forEach(fasGraph.nodes(),
function(v){assignBucket(buckets,zeroIdx,fasGraph.node(v))});return{graph:fasGraph,buckets,zeroIdx}}function assignBucket(buckets,zeroIdx,entry){entry.out?entry["in"]?buckets[entry.out-entry["in"]+zeroIdx].enqueue(entry):buckets[buckets.length-1].enqueue(entry):buckets[0].enqueue(entry)}var _=require("module$node_modules$dagre$lib$lodash"),Graph=require("module$node_modules$dagre$lib$graphlib").Graph,List=require("module$node_modules$dagre$lib$data$list");module.exports=function(g,weightFn){if(1>=
g.nodeCount())return[];weightFn=buildState(g,weightFn||DEFAULT_WEIGHT_FN);weightFn=doGreedyFAS(weightFn.graph,weightFn.buckets,weightFn.zeroIdx);return _.flatten(_.map(weightFn,function(e){return g.outEdges(e.v,e.w)}),!0)};var DEFAULT_WEIGHT_FN=_.constant(1)}
//# sourceMappingURL=module$node_modules$dagre$lib$greedy_fas.js.map
