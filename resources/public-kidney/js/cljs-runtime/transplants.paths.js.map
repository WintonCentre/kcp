{"version":3,"sources":["transplants/paths.cljs"],"mappings":";AAIA,0BAAA,1BAAKA;AAEL,2BAAA,3BAAMC,8DACHC;AADH,AAEE,sDAAA,9CAAK,AAACC,eAAKD,OAAOF,8BAAYA;;AAGhC,AAAKI,kCAAc,yBAAA,xBAAKJ;AAExB,+BAAA,/BAAMK,sEACHH;AADH,AAEE,wCAAA,hCAAK,AAACD,yBAAOC;;AAEf,iCAAA,jCAAMI,0EACHJ;AADH,AAEE,wCAAA,hCAAK,AAACD,yBAAOC;;AAWf;;;2CAAA,3CAAMK,8FAEHL,MAAMM,YAAYC;AAFrB,AAGE,yGAAA,zGAACC,+LAAeD;;AAChB,IAAME,YAAU,AAACC,8BAAW,AAACT,eAAKM;IAC5BI,OACA,sEAAA,KAAA,zEAEE,uDAAA,vDAACC,6CAAEH,8CAGH,iBAAAI,eAAA,iFAAA,eAAA;AAAA,AAAA,QAAAA,6CAAAA,wDAAAA,bAA2BJ,oCAAAA;+FAL7B,zFAKwC,iCAAA,uCAAA,vEAAK,AAACV,yBAAOC,YACHF,wBACLW,2BAErC,8GAAA,7GAAK,AAACV,yBAAOC,OACR,AAACU,8BAAWJ,aAAaR,wBACzBW;;AAbnB,AAcE,yGAAA,0HAAA,nOAACD,2OAAyCG;;AAC1CA;;AAEJ","names":["transplants.paths/slash","transplants.paths/prefix","organ","cljs.core/name","transplants.paths/metadata-path","transplants.paths/tools-path","transplants.paths/centres-path","transplants.paths/organ-centre-name-tool","centre-name","tool","cljs.core.println","tool-name","transplants.shared/underscore","path","cljs.core._EQ_","fexpr__67468"],"sourcesContent":["(ns transplants.paths\n ; \"Configuration file paths\"\n  (:require [transplants.shared :refer [underscore]]))\n\n(def slash \"/\")\n\n(defn prefix\n  [organ]\n  (str (name organ) slash \"edn\" slash))\n\n\n(def metadata-path (str slash \"metadata.edn\"))\n\n(defn tools-path\n  [organ]\n  (str (prefix organ) \"tools.txt\"))\n\n(defn centres-path\n  [organ]\n  (str (prefix organ) \"centres.txt\"))\n\n#_(defn organ-centre-name-tool\n  [organ centre-name tool]\n  ;(println ::tool tool)\n  (if (= (name tool) \"guidance\")\n    nil\n    (str (prefix organ)\n         (underscore centre-name) slash\n         (underscore tool) \".txt\")))\n\n(defn organ-centre-name-tool\n  \"return a pathname for tool data, else nil\"\n  [organ centre-name tool]\n  (println ::tool tool)\n  (let [tool-name (underscore (name tool))\n        path\n        (cond\n      ;; todo: NHSBT dependent\n          (= tool-name \"guidance\") nil\n\n      ;; todo: NHSBT dependent\n          (#{\"ldsurvival\" \"ldgraft\"} tool-name) (str (prefix organ)\n                                                     \"UK\" slash\n                                                     tool-name \".txt\")\n      ;; OK\n          :else (str (prefix organ)\n                     (underscore centre-name) slash\n                     tool-name \".txt\"))]\n    (println ::organ-centre-name-tool \"path=\" path)\n    path))\n\n(comment\n  (prefix \"lung\")\n  (centres-path :lung)\n  (underscore :waiting)\n  \n  (organ-centre-name-tool  \"lung\"\n                            \"birm\"\n                            \"post-transplant\")\n  \n  )\n  "]}