{"version":3,"sources":["transplants/spline.cljs"],"mappings":";AAMA;;;;;4BAAA,oCAAAA,SAAAC,zEAAMI,kFAMFS,GAAGC;AANP,AAAA,IAAAb,aAAAF;SAAA,AAAAG,4CAAAD,WAAA,IAAA,hEAIKI;SAJL,AAAAH,4CAAAD,WAAA,IAAA,hEAIQK;SAJR,AAAAJ,4CAAAD,WAAA,IAAA,hEAIWM;SAJX,AAAAL,4CAAAD,WAAA,IAAA,hEAIcO;IAJdL,aAAAH;aAAA,AAAAE,4CAAAC,WAAA,IAAA,pEAKKM;aALL,AAAAP,4CAAAC,WAAA,IAAA,pEAKYO;aALZ,AAAAR,4CAAAC,WAAA,IAAA,pEAKmBQ;YALnBR,RAK8BS;AAL9B,AAOG,IAAMG,aAAM,WAAKD;AAAL,AAAQ,GAAI,SAAA,RAAMA;AAAG,QAAA,CAAGA,QAAEA,SAAEA;;AAApB;;;IACdE,WAAI,WAAKF,MAAEG;AAAP,AAAU,OAACF,WAAM,CAAGD,QAAEG;;IAC1BC,OAAK,WAAKD,EAAEH;AAAP,AAAU,QAAG,CAAG,AAACE,SAAIF,MAAEG,KAAG,AAACD,SAAIF,MAAEN,OAAK,CAAGA,KAAGS;;IACjDE,KAAG,WAAKL;AAAL,AAAQ,QAAG,AAACI,KAAKb,GAAGS,SAAG,AAACI,KAAKX,GAAGO;;IACnCM,KAAG,WAAKN;AAAL,AAAQ,QAAG,AAACI,KAAKZ,GAAGQ,SAAG,AAACI,KAAKX,GAAGO;;IACnCO,KAAG,WAAKP,MAAED;AAAP,AAAA,0FAAY,CAAGC,QAAED,QAAI,CAAG,AAACM,GAAGL,SAAG,AAACK,GAAGN,SAAK,CAAG,AAACO,GAAGN,SAAG,AAACM,GAAGP;;AAL/D,AAME,OAACS,8CAAMC,iBAAE,AAACC,4CAAIC,iBAAEb,MAAM,AAACS,GAAGP,EAAED;;AAEjC,AAqCA","names":["p__81478","p__81479","vec__81480","cljs.core.nth","vec__81483","transplants.spline/spline","k1","k2","k3","k4","_beta1","_beta2","_beta3","betas","x0","x","cube+","d3+","n","term","f1","f2","xs","cljs.core.apply","cljs.core/+","cljs.core.map","cljs.core/*"],"sourcesContent":["(ns transplants.spline)\n\n\n;;\n;; todo: Should the functions be defined outside spline for better performance?\n;;\n(defn spline\n   \"Perform spline calculation to transform x using knots and betas. See Jenny Mehew doc.\n   x0 is the base var, x is the entered var, and the betas and knots are configured in the\n   spreadsheet.\"\n   [[k1 k2 k3 k4]\n    [_beta1 _beta2 _beta3 :as betas]\n    x0 x]\n   (let [cube+ (fn [x] (if (pos? x) (* x x x) 0))\n         d3+ (fn [x n] (cube+ (- x n)))\n         term (fn [n x] (/ (- (d3+ x n) (d3+ x k4)) (- k4 n)))\n         f1 (fn [x] (- (term k1 x) (term k3 x)))\n         f2 (fn [x] (- (term k2 x) (term k3 x)))\n         xs (fn [x x0] [(- x x0) (- (f1 x) (f1 x0)) (- (f2 x) (f2 x0))])]\n     (apply + (map * betas (xs x x0)))))\n\n(comment\n  ;;\n  ;; NB These tests have been overtaken by events. NHSBT changed the model again\n  ;;\n\n  ;; set up a test case to chase age discrepancy)\n  (def k1 21)\n  (def k2 44)\n  (def k3 56)\n  (def k4 63)\n  (def knots [k1 k2 k3 k4])\n  (def beta1 0.00507)\n  (def beta2 -0.0004272)\n  (def beta3 0.00192)\n  (def betas [beta1 beta2 beta3])\n\n  ; create a transplant age spline function with these knots and betas \n  ; and a baseline age of 51 partially applied.\n  (def tx-age-spline (partial spline knots betas 51))\n  \n  ; apply to age 69\n  (def beta-age-69 (tx-age-spline 69))\n  ; => 0.3432035187969925\n  ; \n  ; This result agrees with cell B11 of age69-day317-eaxmple.cljs which is a \n  ; copy of \"Calculated adjusted CIFs - example.xlsx\" with the newer betas inserted\n  ; It also agrees with the age beta-x figure on the test page for Birmingham.\n  \n  ; completing the calculation for scenario 25\n  (def cif_0 0.3122)\n  (def cif (- 1 (js/Math.pow (- 1 cif_0) (js/Math.exp beta-age-69))))\n  ; => 0.4099210121796981\n  ; which agrees with the test page.\n  ; However scenario 25 of \"Birmingham test case estimates.xlsx\" for day 317 is\n  ; 0.4092188 in cell C109.\n)\n\n(comment\n ; For reference, this is a similar reworking of the example sent by Rachel in clojure. \n ; set up a test case to agree with \"Calculated adjusted CIFs - example.xlsx\"\n (def k1 21)\n (def k2 44)\n (def k3 56)\n (def k4 63)\n (defn cube+ [x] (if (pos? x) (* x x x) 0))\n (defn d3+ [x n] (cube+ (- x n)))\n (defn term1 [n x] (/ (- (d3+ x n) (d3+ x k4)) (- k4 n)))\n (defn term2 [x] (/ (- (d3+ x k3) (d3+ x k4)) (- k4 k3)))\n\n\n   ; numeric betas taken from \"Calculated adjusted CIFs - example.xlsx\"\n (def tx-age-spline (partial spline [k1 k2 k3 k4] [0.00432 -0.0003983 0.00181] 51))\n (def rem-age-spline (partial spline [k1 k2 k3 k4] [0.04418 -0.00120 0.00360] 51))\n (def dth-age-spline (partial spline [k1 k2 k3 k4] [-0.02226 0.00162 -0.00588] 51))\n\n   ; tests\n (tx-age-spline 30)                                        ;0.12574138684210526\n (tx-age-spline 51)                                        ;0\n (tx-age-spline 60)                                        ;0.07700381015037594\n \n (rem-age-spline 30)                                       ;-0.24216947368421055\n (rem-age-spline 51)                                       ;0\n (rem-age-spline 60)                                       ;0.16337187969924816\n \n (dth-age-spline 30)                                       ;-0.43970052631578943\n (dth-age-spline 51)                                       ;0\n (dth-age-spline 60)                                       ;-0.07625616541353364\n \n   ; These results agree with the example spreadsheet\n )\n"]}