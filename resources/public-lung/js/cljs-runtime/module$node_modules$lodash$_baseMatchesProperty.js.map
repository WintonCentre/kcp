{
"version":3,
"file":"module$node_modules$lodash$_baseMatchesProperty.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACxGC,YAAcH,OAAA,CAAQ,yCAAR,CAD0F,CAExGI,IAAMJ,OAAA,CAAQ,gCAAR,CAFkG,CAGxGK,MAAQL,OAAA,CAAQ,kCAAR,CAHgG,CAIxGM,MAAQN,OAAA,CAAQ,mCAAR,CAJgG,CAKxGO,mBAAqBP,OAAA,CAAQ,gDAAR,CALmF,CAMxGQ,wBAA0BR,OAAA,CAAQ,qDAAR,CAN8E,CAOxGS,MAAQT,OAAA,CAAQ,mCAAR,CA0BZC;MAAOC,CAAAA,OAAP,CAZAQ,QAA4B,CAACC,IAAD,CAAOC,QAAP,CAAiB,CAC3C,MAAIN,MAAA,CAAMK,IAAN,CAAJ,EAAmBJ,kBAAA,CAAmBK,QAAnB,CAAnB,CACSJ,uBAAA,CAAwBC,KAAA,CAAME,IAAN,CAAxB,CAAqCC,QAArC,CADT,CAGO,QAAQ,CAACC,MAAD,CAAS,CACtB,IAAIC,SAAWV,GAAA,CAAIS,MAAJ,CAAYF,IAAZ,CACf,OAAqBI,KAAAA,EAAd,GAACD,QAAD,EAA2BA,QAA3B,GAAwCF,QAAxC,CACHP,KAAA,CAAMQ,MAAN,CAAcF,IAAd,CADG,CAEHR,WAAA,CAAYS,QAAZ,CAAsBE,QAAtB,CAAgC,CAAhC,CAJkB,CAJmB,CArB+D;",
"sources":["node_modules/lodash/_baseMatchesProperty.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseMatchesProperty\"] = function(global,require,module,exports) {\nvar baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseIsEqual","get","hasIn","isKey","isStrictComparable","matchesStrictComparable","toKey","baseMatchesProperty","path","srcValue","object","objValue","undefined"]
}
