{
"version":3,
"file":"module$node_modules$lodash$_baseMerge.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoBlGC,QAASA,UAAS,CAACC,MAAD,CAASC,MAAT,CAAiBC,QAAjB,CAA2BC,UAA3B,CAAuCC,KAAvC,CAA8C,CAC1DJ,MAAJ,GAAeC,MAAf,EAGAI,OAAA,CAAQJ,MAAR,CAAgB,QAAQ,CAACK,QAAD,CAAWC,GAAX,CAAgB,CACtCH,KAAA,GAAUA,KAAV,CAAkB,IAAII,KAAtB,CACA,IAAIC,QAAA,CAASH,QAAT,CAAJ,CACEI,aAAA,CAAcV,MAAd,CAAsBC,MAAtB,CAA8BM,GAA9B,CAAmCL,QAAnC,CAA6CH,SAA7C,CAAwDI,UAAxD,CAAoEC,KAApE,CADF,KAGK,CACH,IAAIO,SAAWR,UAAA,CACXA,UAAA,CAAWS,OAAA,CAAQZ,MAAR,CAAgBO,GAAhB,CAAX,CAAiCD,QAAjC,CAA4CC,GAA5C,CAAkD,EAAlD,CAAuDP,MAAvD,CAA+DC,MAA/D,CAAuEG,KAAvE,CADW,CAEXS,IAAAA,EAEaA,KAAAA,EAAjB,GAAIF,QAAJ,GACEA,QADF,CACaL,QADb,CAGAQ,iBAAA,CAAiBd,MAAjB,CAAyBO,GAAzB,CAA8BI,QAA9B,CARG,CALiC,CAAxC;AAeGI,MAfH,CAJ8D,CApBkC,IAC9FP,MAAQZ,OAAA,CAAQ,mCAAR,CADsF,CAE9FkB,iBAAmBlB,OAAA,CAAQ,8CAAR,CAF2E,CAG9FS,QAAUT,OAAA,CAAQ,qCAAR,CAHoF,CAI9Fc,cAAgBd,OAAA,CAAQ,2CAAR,CAJ8E,CAK9Fa,SAAWb,OAAA,CAAQ,qCAAR,CALmF,CAM9FmB,OAASnB,OAAA,CAAQ,mCAAR,CANqF,CAO9FgB,QAAUhB,OAAA,CAAQ,qCAAR,CAmCdC,OAAOC,CAAAA,OAAP,CAAiBC,SA1CiF;",
"sources":["node_modules/lodash/_baseMerge.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseMerge\"] = function(global,require,module,exports) {\nvar Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseMerge","object","source","srcIndex","customizer","stack","baseFor","srcValue","key","Stack","isObject","baseMergeDeep","newValue","safeGet","undefined","assignMergeValue","keysIn"]
}
