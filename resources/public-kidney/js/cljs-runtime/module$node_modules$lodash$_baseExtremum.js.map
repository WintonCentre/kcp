{
"version":3,
"file":"module$node_modules$lodash$_baseExtremum.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,SAAWH,OAAA,CAAQ,qCAAR,CA+BfC,OAAOC,CAAAA,OAAP,CAnBAE,QAAqB,CAACC,KAAD,CAAQC,QAAR,CAAkBC,UAAlB,CAA8B,CAIjD,IAJiD,IAC7CC,MAAQ,CAAC,CADoC,CAE7CC,OAASJ,KAAMI,CAAAA,MAEnB,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CAAA,IACnBC,MAAQL,KAAA,CAAMG,KAAN,CADW,CAEnBG,QAAUL,QAAA,CAASI,KAAT,CAEd,IAAe,IAAf,EAAIC,OAAJ,GAAqCC,IAAAA,EAAb,GAAAC,QAAA,CACfF,OADe,GACHA,OADG,EACQ,CAACR,QAAA,CAASQ,OAAT,CADT,CAEhBJ,UAAA,CAAWI,OAAX,CAAoBE,QAApB,CAFR,EAGO,IACDA,SAAWF,OADV,CAEDG,OAASJ,KATQ,CAYzB,MAAOI,OAhB0C,CAbkD;",
"sources":["node_modules/lodash/_baseExtremum.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseExtremum\"] = function(global,require,module,exports) {\nvar isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isSymbol","baseExtremum","array","iteratee","comparator","index","length","value","current","undefined","computed","result"]
}
