{
"version":3,
"file":"module$node_modules$lodash$union.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACzFC,YAAcH,OAAA,CAAQ,yCAAR,CACdI,OAAAA,CAAWJ,OAAA,CAAQ,sCAAR,CAF8E,KAGzFK,SAAWL,OAAA,CAAQ,sCAAR,CAH8E,CAIzFM,kBAAoBN,OAAA,CAAQ,8CAAR,CAkBpBO,QAAAA,CAAQH,MAAA,CAAS,QAAQ,CAACI,MAAD,CAAS,CACpC,MAAOH,SAAA,CAASF,WAAA,CAAYK,MAAZ,CAAoB,CAApB,CAAuBF,iBAAvB,CAA0C,CAAA,CAA1C,CAAT,CAD6B,CAA1B,CAIZL,OAAOC,CAAAA,OAAP,CAAiBK,OA1B4E;",
"sources":["node_modules/lodash/union.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$union\"] = function(global,require,module,exports) {\nvar baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseFlatten","baseRest","baseUniq","isArrayLikeObject","union","arrays"]
}
