;;
;; similar in function to the `npm run` tasks initially, but written in clojure
;;
{:paths ["bb-scripts"]
 :deps {}
 :tasks {:requires ([babashka.fs :as fs]
                    [clojure.string :as string])
         ;:init (defn env [s] (System/getenv s))
         :enter (println "Entering:" (:name (current-task)))
         print-env (println (env (first *command-line-args*)))
         install (shell "npm install")
         config (shell "clojure -A:config -X transplants.configure/main")
         start  (shell "shadow-cljs watch app")
         stop (shell "shadow-cljs stop")
         watch-all (shell "shadow-cljs watch app test-browser")
         build "shadow-cljs release app"
         build-verbose (shell "shadow-cljs release --verbose app")
         report (shell "shadow-cljs run shadow.cljs.build-report app report.html")
         debug-build (shell "shadow-cljs release app --debug")
         serve (shell "serve --single resources/public --listen 5000")
         dev-build (shell "shadow-cljs compile app")
         repl (shell "shadow-cljs cljs-repl app")
         browser-repl (shell "shadow-cljs browser-repl")
         clojure-repl (shell "shadow-cljs clj-repl")
         test (shell "shadow-cljs watch test")
         test-browser (shell "shadow-cljs watch test-browser")
         test-once (shell "shadow-cljs compile test")
         clean (fs/delete-tree "resources/public/js")
         nuke (run! fs/delete-tree ["resources/public/js" ".shadow-cljs" "node_modules"
                                    "yarn.lock" "package-lock.json" "out" "report.html"])
         install* (shell (string/join " " (cons "npm install" *command-line-args*)))
         shadow-cljs-server (shell "shadow-cljs server")
         share-xlsx (shell "bb -f bb_scripts/upload_xlsx.clj") ;; publish .xslx files to dropbox
         lint-subs (shell "bb -f bb_scripts/re_frame_subscriptions.clj")
         }}