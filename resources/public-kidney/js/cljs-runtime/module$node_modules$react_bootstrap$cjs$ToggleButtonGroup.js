shadow$provide.module$node_modules$react_bootstrap$cjs$ToggleButtonGroup=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),_react=global(require("module$node_modules$react$index")),
_invariant=global(require("module$node_modules$invariant$browser")),_uncontrollable=require("module$node_modules$uncontrollable$lib$cjs$index"),_createChainedFunction=global(require("module$node_modules$react_bootstrap$cjs$createChainedFunction")),_ElementChildren=require("module$node_modules$react_bootstrap$cjs$ElementChildren"),_ButtonGroup=global(require("module$node_modules$react_bootstrap$cjs$ButtonGroup"));require=global(require("module$node_modules$react_bootstrap$cjs$ToggleButton"));var _excluded=
["children","type","name","value","onChange"];global=_react.default.forwardRef(function(props,ref){var _useUncontrolled=(0,_uncontrollable.useUncontrolled)(props,{value:"onChange"});props=_useUncontrolled.children;var type=_useUncontrolled.type,name=_useUncontrolled.name,value=_useUncontrolled.value,onChange=_useUncontrolled.onChange;_useUncontrolled=(0,_objectWithoutPropertiesLoose2.default)(_useUncontrolled,_excluded);var handleToggle=function(inputVal,event){if(onChange){var values=null==value?
[]:[].concat(value),isActive=-1!==values.indexOf(inputVal);"radio"===type?!isActive&&onChange&&onChange(inputVal,event):isActive?onChange(values.filter(function(n){return n!==inputVal}),event):onChange([].concat(values,[inputVal]),event)}};"radio"!==type||name?void 0:(0,_invariant.default)(!1,'A `name` is required to group the toggle buttons when the `type` is set to "radio"');return _react.default.createElement(_ButtonGroup.default,(0,_extends2.default)({},_useUncontrolled,{ref,toggle:!0}),(0,_ElementChildren.map)(props,
function(child){var values=null==value?[]:[].concat(value),_child$props=child.props,childVal=_child$props.value;_child$props=_child$props.onChange;return _react.default.cloneElement(child,{type,name:child.name||name,checked:-1!==values.indexOf(childVal),onChange:(0,_createChainedFunction.default)(_child$props,function(e){return handleToggle(childVal,e)})})}))});global.defaultProps={type:"radio",vertical:!1};global.Button=require.default;exports.default=global;module.exports=exports["default"]}
//# sourceMappingURL=module$node_modules$react_bootstrap$cjs$ToggleButtonGroup.js.map
