{
"version":3,
"file":"module$node_modules$lodash$zipObject.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC7FC,YAAcH,OAAA,CAAQ,yCAAR,CAD+E,CAE7FI,cAAgBJ,OAAA,CAAQ,2CAAR,CAsBpBC,OAAOC,CAAAA,OAAP,CAJAG,QAAkB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAChC,MAAOH,cAAA,CAAcE,KAAd,EAAuB,EAAvB,CAA2BC,MAA3B,EAAqC,EAArC,CAAyCJ,WAAzC,CADyB,CApB+D;",
"sources":["node_modules/lodash/zipObject.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$zipObject\"] = function(global,require,module,exports) {\nvar assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n\n};"],
"names":["shadow$provide","global","require","module","exports","assignValue","baseZipObject","zipObject","props","values"]
}
