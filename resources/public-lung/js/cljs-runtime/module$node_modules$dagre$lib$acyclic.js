shadow$provide.module$node_modules$dagre$lib$acyclic=function(global,require,module,exports){function dfsFAS(g){function dfs(v){_.has(visited,v)||(visited[v]=!0,stack[v]=!0,_.forEach(g.outEdges(v),function(e){_.has(stack,e.w)?fas.push(e):dfs(e.w)}),delete stack[v])}var fas=[],stack={},visited={};_.forEach(g.nodes(),dfs);return fas}var _=require("module$node_modules$dagre$lib$lodash"),greedyFAS=require("module$node_modules$dagre$lib$greedy_fas");module.exports={run:function(g$jscomp$0){function weightFn(g){return function(e){return g.edge(e).weight}}
var fas="greedy"===g$jscomp$0.graph().acyclicer?greedyFAS(g$jscomp$0,weightFn(g$jscomp$0)):dfsFAS(g$jscomp$0);_.forEach(fas,function(e){var label=g$jscomp$0.edge(e);g$jscomp$0.removeEdge(e);label.forwardName=e.name;label.reversed=!0;g$jscomp$0.setEdge(e.w,e.v,label,_.uniqueId("rev"))})},undo:function(g){_.forEach(g.edges(),function(e){var label=g.edge(e);if(label.reversed){g.removeEdge(e);var forwardName=label.forwardName;delete label.reversed;delete label.forwardName;g.setEdge(e.w,e.v,label,forwardName)}})}}}
//# sourceMappingURL=module$node_modules$dagre$lib$acyclic.js.map
