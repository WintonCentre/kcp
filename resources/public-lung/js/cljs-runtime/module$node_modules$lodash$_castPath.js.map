{
"version":3,
"file":"module$node_modules$lodash$_castPath.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC7FC,QAAUH,OAAA,CAAQ,oCAAR,CADmF,CAE7FI,MAAQJ,OAAA,CAAQ,mCAAR,CAFqF,CAG7FK,aAAeL,OAAA,CAAQ,0CAAR,CAH8E,CAI7FM,SAAWN,OAAA,CAAQ,qCAAR,CAiBfC,OAAOC,CAAAA,OAAP,CAPAK,QAAiB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAC/B,MAAIN,QAAA,CAAQK,KAAR,CAAJ,CACSA,KADT,CAGOJ,KAAA,CAAMI,KAAN,CAAaC,MAAb,CAAA,CAAuB,CAACD,KAAD,CAAvB,CAAiCH,YAAA,CAAaC,QAAA,CAASE,KAAT,CAAb,CAJT,CAdgE;",
"sources":["node_modules/lodash/_castPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_castPath\"] = function(global,require,module,exports) {\nvar isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isArray","isKey","stringToPath","toString","castPath","value","object"]
}
