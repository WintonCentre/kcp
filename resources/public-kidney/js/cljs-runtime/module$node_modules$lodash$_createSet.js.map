{
"version":3,
"file":"module$node_modules$lodash$_createSet.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC9FC,IAAMH,OAAA,CAAQ,iCAAR,CACNI,OAAAA,CAAOJ,OAAA,CAAQ,iCAAR,CACPK,QAAAA,CAAaL,OAAA,CAAQ,wCAAR,CAGbM,QAAAA,CAAW,CAAXA,CAAe,CASfC,QAAAA,CAAcJ,GAAF,EAAU,CAAV,CAAcE,OAAA,CAAW,IAAIF,GAAJ,CAAQ,CAAA,CAAE,CAAC,CAAH,CAAR,CAAX,CAAA,CAA2B,CAA3B,CAAd,EAAgDG,OAAhD,CAAmE,QAAQ,CAACE,MAAD,CAAS,CAClG,MAAO,KAAIL,GAAJ,CAAQK,MAAR,CAD2F,CAApF,CAA4DJ,MAI5EH,OAAOC,CAAAA,OAAP,CAAiBK,OAnBiF;",
"sources":["node_modules/lodash/_createSet.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createSet\"] = function(global,require,module,exports) {\nvar Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Set","noop","setToArray","INFINITY","createSet","values"]
}
