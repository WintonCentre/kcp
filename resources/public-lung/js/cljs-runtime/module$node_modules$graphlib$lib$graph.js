shadow$provide.module$node_modules$graphlib$lib$graph=function(global,require,module,exports){function Graph(opts){this._isDirected=_.has(opts,"directed")?opts.directed:!0;this._isMultigraph=_.has(opts,"multigraph")?opts.multigraph:!1;this._isCompound=_.has(opts,"compound")?opts.compound:!1;this._label=void 0;this._defaultNodeLabelFn=_.constant(void 0);this._defaultEdgeLabelFn=_.constant(void 0);this._nodes={};this._isCompound&&(this._parent={},this._children={},this._children[GRAPH_NODE]={});this._in=
{};this._preds={};this._out={};this._sucs={};this._edgeObjs={};this._edgeLabels={}}function edgeArgsToId(isDirected,v_,w_,name){v_=""+v_;w_=""+w_;!isDirected&&v_>w_&&(isDirected=v_,v_=w_,w_=isDirected);return v_+""+w_+""+(_.isUndefined(name)?"\x00":name)}function edgeObjToId(isDirected,edgeObj){return edgeArgsToId(isDirected,edgeObj.v,edgeObj.w,edgeObj.name)}var _=require("module$node_modules$graphlib$lib$lodash");module.exports=Graph;var GRAPH_NODE="\x00";Graph.prototype._nodeCount=0;Graph.prototype._edgeCount=
0;Graph.prototype.isDirected=function(){return this._isDirected};Graph.prototype.isMultigraph=function(){return this._isMultigraph};Graph.prototype.isCompound=function(){return this._isCompound};Graph.prototype.setGraph=function(label){this._label=label;return this};Graph.prototype.graph=function(){return this._label};Graph.prototype.setDefaultNodeLabel=function(newDefault){_.isFunction(newDefault)||(newDefault=_.constant(newDefault));this._defaultNodeLabelFn=newDefault;return this};Graph.prototype.nodeCount=
function(){return this._nodeCount};Graph.prototype.nodes=function(){return _.keys(this._nodes)};Graph.prototype.sources=function(){var self=this;return _.filter(this.nodes(),function(v){return _.isEmpty(self._in[v])})};Graph.prototype.sinks=function(){var self=this;return _.filter(this.nodes(),function(v){return _.isEmpty(self._out[v])})};Graph.prototype.setNodes=function(vs,value){var args=arguments,self=this;_.each(vs,function(v){1<args.length?self.setNode(v,value):self.setNode(v)});return this};
Graph.prototype.setNode=function(v,value){if(_.has(this._nodes,v))return 1<arguments.length&&(this._nodes[v]=value),this;this._nodes[v]=1<arguments.length?value:this._defaultNodeLabelFn(v);this._isCompound&&(this._parent[v]=GRAPH_NODE,this._children[v]={},this._children[GRAPH_NODE][v]=!0);this._in[v]={};this._preds[v]={};this._out[v]={};this._sucs[v]={};++this._nodeCount;return this};Graph.prototype.node=function(v){return this._nodes[v]};Graph.prototype.hasNode=function(v){return _.has(this._nodes,
v)};Graph.prototype.removeNode=function(v){var self=this;if(_.has(this._nodes,v)){var removeEdge=function(e){self.removeEdge(self._edgeObjs[e])};delete this._nodes[v];this._isCompound&&(this._removeFromParentsChildList(v),delete this._parent[v],_.each(this.children(v),function(child){self.setParent(child)}),delete this._children[v]);_.each(_.keys(this._in[v]),removeEdge);delete this._in[v];delete this._preds[v];_.each(_.keys(this._out[v]),removeEdge);delete this._out[v];delete this._sucs[v];--this._nodeCount}return this};
Graph.prototype.setParent=function(v,parent){if(!this._isCompound)throw Error("Cannot set parent in a non-compound graph");if(_.isUndefined(parent))parent=GRAPH_NODE;else{for(var ancestor=parent+="";!_.isUndefined(ancestor);ancestor=this.parent(ancestor))if(ancestor===v)throw Error("Setting "+parent+" as parent of "+v+" would create a cycle");this.setNode(parent)}this.setNode(v);this._removeFromParentsChildList(v);this._parent[v]=parent;this._children[parent][v]=!0;return this};Graph.prototype._removeFromParentsChildList=
function(v){delete this._children[this._parent[v]][v]};Graph.prototype.parent=function(v){if(this._isCompound&&(v=this._parent[v],v!==GRAPH_NODE))return v};Graph.prototype.children=function(v){_.isUndefined(v)&&(v=GRAPH_NODE);if(this._isCompound){if(v=this._children[v])return _.keys(v)}else{if(v===GRAPH_NODE)return this.nodes();if(this.hasNode(v))return[]}};Graph.prototype.predecessors=function(v){if(v=this._preds[v])return _.keys(v)};Graph.prototype.successors=function(v){if(v=this._sucs[v])return _.keys(v)};
Graph.prototype.neighbors=function(v){var preds=this.predecessors(v);if(preds)return _.union(preds,this.successors(v))};Graph.prototype.isLeaf=function(v){return 0===(this.isDirected()?this.successors(v):this.neighbors(v)).length};Graph.prototype.filterNodes=function(filter){function findParent(v){var parent=self.parent(v);return void 0===parent||copy.hasNode(parent)?parents[v]=parent:parent in parents?parents[parent]:findParent(parent)}var copy=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,
compound:this._isCompound});copy.setGraph(this.graph());var self=this;_.each(this._nodes,function(value,v){filter(v)&&copy.setNode(v,value)});_.each(this._edgeObjs,function(e){copy.hasNode(e.v)&&copy.hasNode(e.w)&&copy.setEdge(e,self.edge(e))});var parents={};this._isCompound&&_.each(copy.nodes(),function(v){copy.setParent(v,findParent(v))});return copy};Graph.prototype.setDefaultEdgeLabel=function(newDefault){_.isFunction(newDefault)||(newDefault=_.constant(newDefault));this._defaultEdgeLabelFn=
newDefault;return this};Graph.prototype.edgeCount=function(){return this._edgeCount};Graph.prototype.edges=function(){return _.values(this._edgeObjs)};Graph.prototype.setPath=function(vs,value){var self=this,args=arguments;_.reduce(vs,function(v,w){1<args.length?self.setEdge(v,w,value):self.setEdge(v,w);return w});return this};Graph.prototype.setEdge=function(){var valueSpecified=!1,arg0=arguments[0];if("object"===typeof arg0&&null!==arg0&&"v"in arg0){var v=arg0.v;var w=arg0.w;var name=arg0.name;
if(2===arguments.length){var value=arguments[1];valueSpecified=!0}}else v=arg0,w=arguments[1],name=arguments[3],2<arguments.length&&(value=arguments[2],valueSpecified=!0);v=""+v;w=""+w;_.isUndefined(name)||(name=""+name);arg0=edgeArgsToId(this._isDirected,v,w,name);if(_.has(this._edgeLabels,arg0))return valueSpecified&&(this._edgeLabels[arg0]=value),this;if(!_.isUndefined(name)&&!this._isMultigraph)throw Error("Cannot set a named edge when isMultigraph \x3d false");this.setNode(v);this.setNode(w);
this._edgeLabels[arg0]=valueSpecified?value:this._defaultEdgeLabelFn(v,w,name);v=""+v;w=""+w;!this._isDirected&&v>w&&(value=v,v=w,w=value);value={v,w};name&&(value.name=name);v=value.v;w=value.w;Object.freeze(value);this._edgeObjs[arg0]=value;name=this._preds[w];valueSpecified=v;name[valueSpecified]?name[valueSpecified]++:name[valueSpecified]=1;name=this._sucs[v];valueSpecified=w;name[valueSpecified]?name[valueSpecified]++:name[valueSpecified]=1;this._in[w][arg0]=value;this._out[v][arg0]=value;this._edgeCount++;
return this};Graph.prototype.edge=function(v,w,name){var e=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);return this._edgeLabels[e]};Graph.prototype.hasEdge=function(v,w,name){var e=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,v,w,name);return _.has(this._edgeLabels,e)};Graph.prototype.removeEdge=function(v,w,name){var e=1===arguments.length?edgeObjToId(this._isDirected,arguments[0]):edgeArgsToId(this._isDirected,
v,w,name),edge=this._edgeObjs[e];if(edge){v=edge.v;w=edge.w;delete this._edgeLabels[e];delete this._edgeObjs[e];edge=this._preds[w];var k=v;--edge[k]||delete edge[k];edge=this._sucs[v];k=w;--edge[k]||delete edge[k];delete this._in[w][e];delete this._out[v][e];this._edgeCount--}return this};Graph.prototype.inEdges=function(v,u){if(v=this._in[v])return v=_.values(v),u?_.filter(v,function(edge){return edge.v===u}):v};Graph.prototype.outEdges=function(v,w){if(v=this._out[v])return v=_.values(v),w?_.filter(v,
function(edge){return edge.w===w}):v};Graph.prototype.nodeEdges=function(v,w){var inEdges=this.inEdges(v,w);if(inEdges)return inEdges.concat(this.outEdges(v,w))}}
//# sourceMappingURL=module$node_modules$graphlib$lib$graph.js.map
