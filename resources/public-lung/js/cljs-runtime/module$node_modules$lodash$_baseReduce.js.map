{
"version":3,
"file":"module$node_modules$lodash$_baseReduce.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBnGD,MAAOC,CAAAA,OAAP,CATAC,QAAmB,CAACC,mBAAD,CAAaC,QAAb,CAAuBC,WAAvB,CAAoCC,SAApC,CAA+CC,QAA/C,CAAyD,CAC1EA,QAAA,CAASJ,mBAAT,CAAqB,QAAQ,CAACK,KAAD,CAAQC,KAAR,CAAeN,UAAf,CAA2B,CACtDE,WAAA,CAAcC,SAAA,EACTA,SAAA,CAAY,CAAA,CAAZ,CAAmBE,KADV,EAEVJ,QAAA,CAASC,WAAT,CAAsBG,KAAtB,CAA6BC,KAA7B,CAAoCN,UAApC,CAHkD,CAAxD,CAKA,OAAOE,YANmE,CAduB;",
"sources":["node_modules/lodash/_baseReduce.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseReduce\"] = function(global,require,module,exports) {\n/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","value","index"]
}
