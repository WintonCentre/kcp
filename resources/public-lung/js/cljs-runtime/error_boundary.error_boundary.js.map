{"version":3,"sources":["error_boundary/error_boundary.cljs"],"mappings":";AAUA,AAAA;;;6CAAA,qDAAAA,lGAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,gFAAAF;;;AAAA,AAAA,CAAA,kFAAA,lFAAME,6FAEDI;AAFL,AAGE,IAAMC,YAAU,gDAAA,hDAACC;AAAjB,AACE,+DAAA,2CAAA,oEAAA,cAAA,rLAACC,uQAEsB,WAAKC,IAAIC;AAAT,AACE,uCAAA,hCAACC,sBAAOL,6FAAWG,IAAIC;GAHhD,qGAIgC,WAAKD;AAAL,AAAA,0FAAA,8CAAA,gBAA8B,AAACG,wGAAOH;GAJtE,yEAKkB;mCAAOI;AAAP,AACE,GAAI,CAAA,AAAAC,8BAAA,dAAOR;AACT,oDAAA,mFAAA,hIAACS,yLAAWF;;AACZ,IAAAG,aAAA,AAAAF,gBAAkBR;UAAlB,AAAAW,4CAAAD,WAAA,IAAA,jEAAOP;WAAP,AAAAQ,4CAAAD,WAAA,IAAA,lEAAWN;AAAX,AAAA,0FAAA,iDAAA,mFAAA,mDAAA,mFAAA,wLAAA,mFAAA,mDAAA,mFAAA,5VAEgB,AAACE,wGAAOF,ySACR,AAACE,wGAAOH;;;;IANrBI;;;;EAAAA;;oCAAAA;;;IAAAA;0BAAAA;;;;;;;;AAT7B,CAAA,qEAAA,rEAAMZ;;AAAN;AAAA,CAAA,+DAAA,WAAAC,1EAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA","names":["var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","error-boundary.error-boundary/err-boundary","seq83169","self__4852__auto__","cljs.core/seq","_children","err-state","reagent.core.atom","reagent.core.create_class","err","info","cljs.core/reset!","cljs.core.pr_str","children","cljs.core/deref","cljs.core.into","vec__83170","cljs.core.nth"],"sourcesContent":["(ns error-boundary.error-boundary\n  (:require [reagent.core :as r]\n            ;[reagent.impl.component :as comp]\n            ;[reagent.impl.util :as util]\n            ;[goog.object :as gobj]\n            ))\n\n;;\n;; todo: Is our error boundary function doing what it is meant to? I'm not sure what to expect. \n;;\n(defn err-boundary\n  \" See https://lilac.town/writing/modern-react-in-cljs-error-boundaries/ for Reactv16\"\n  [& _children]\n  (let [err-state (r/atom nil)]\n    (r/create-class\n     {:display-name \"ErrBoundary\"\n      :component-did-catch (fn [err info]\n                             (reset! err-state [err info]))\n      :get-derived-state-from-error (fn [err] [:p \"The error is \" (pr-str err)])\n      :reagent-render (fn [& children]\n                        (if (nil? @err-state)\n                          (into [:<>] children)\n                          (let [[err info] @err-state]\n                            [:<>\n                             [:pre [:code (pr-str info)]]\n                             [:pre [:code (pr-str err)]]])))})))\n\n"]}