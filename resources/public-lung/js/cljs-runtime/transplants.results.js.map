{"version":3,"sources":["transplants/results.cljs"],"mappings":"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","names":["transplants.results/results-panel","organ","centre","tool","cljs.core/deref","map__83074","cljs.core/--destructure-map","cljs.core.get","p1__83073#","day","re_frame.core.subscribe","fmaps","outcome-keys","base-outcome-keys","timed-outcome-keys","beta-keys","outcomes","S0","all-S0","bundle","transplants.bundles/get-bundle","env","s0","s0-for-day","transplants.model/S0-for-day","cox?","transplants.model/use-cox-adjusted?","sum-betas","p1__83070#","cljs.core.map","transplants.factors/sum-beta-xs","F","transplants.model/cox-adjusted","cljs.core.conj","inputs","required-inputs","cljs.core/keys","fulfilled-inputs","cljs.core/select-keys","missing","cljs.core/count","unknowns","p1__83071#","cljs.core/some","cljs.core._EQ_","overlay","pred__83078","expr__83079","js/Error","cljs.core/=","pred__83081","expr__83082","transplants.rgb/theme","transplants.ui/tabs","re-frame.core/dispatch","transplants.ui/tab","transplants.vis2/bar-chart","transplants.vis2/area-chart","transplants.vis2/icon-array","transplants.vis2/table","transplants.vis2/text"],"sourcesContent":["(ns transplants.results\n  (:require [re-frame.core :as rf]\n            [transplants.events :as events]\n            [transplants.subs :as subs]\n            [transplants.factors :as fac]\n            [transplants.bundles :as bun]\n            [transplants.model :as model]\n            [transplants.vis2 :as vis]\n            [transplants.ui :as ui]\n            [transplants.rgb :as rgb]\n            ;[shadow.debug :refer [locals ?> ?->]]\n            ))\n\n#_(comment\n  (def day 100)\n  (def route @(rf/subscribe [::subs/current-route]))\n  (def tools @(rf/subscribe [::subs/tools]))\n  (def organ-centres @(rf/subscribe [::subs/organ-centres]))\n  (def bundles @(rf/subscribe [::subs/bundles]))\n  (def oct-names (utils/path-names (:path-params route)))\n  (def oct-keys (map keyword oct-names))\n  (def oct-bundle (apply bun/get-bundle oct-keys))\n  (def baseline-cifs  (:baseline-cifs oct-bundle))\n  (tap> oct-bundle)\n  ;(def baseline-cifs-for-day (bun/cif-0 oct-bundle day))\n  (def outcome-names (fac/get-outcomes* (bun/cif-0 oct-bundle day)))\n  (def outcome-keys (map keyword outcome-names))\n\n  (def beta-outcome-keys (map #(keyword (str \"beta-\" %)) outcome-names))\n  (def cif-outcome-keys (map #(keyword (str \"cif-\" %)) outcome-names))\n  (def inputs @(rf/subscribe [::subs/inputs]))\n  (tap> [::inputs inputs])\n  (count (keys (:lung @(rf/subscribe [::subs/inputs]))))\n  (count @(rf/subscribe [::subs/bundles]))\n  (def env [oct-names oct-bundle inputs])\n  (def  sum-betas (map #(fac/sum-beta-xs env %) beta-outcome-keys))\n  0)\n\n(comment \n  (def sum-betas '(0 0)))\n\n(defn results-panel\n  \"Display results.\n   TODO: REMOVE HARD_CODED TOOL KEYWORDS AND TEXTS\"\n  [organ centre tool]\n  (let [day @(rf/subscribe [::subs/test-day])\n        {:keys [fmaps outcome-keys\n                base-outcome-keys timed-outcome-keys beta-keys outcomes S0 all-S0]\n         :as bundle} (bun/get-bundle organ centre tool)\n        env {:organ organ\n             :centre centre\n             :tool tool\n             :mdata @(rf/subscribe [::subs/mdata])\n             :day day\n             :bundle bundle\n             :fmaps fmaps\n             :S0 S0\n             :all-S0 all-S0\n             :outcomes outcomes\n             :outcome-keys outcome-keys\n             :base-outcome-keys base-outcome-keys\n             :timed-outcome-keys timed-outcome-keys\n             :beta-keys beta-keys\n             :cohort-dates @(rf/subscribe [::subs/cohort-dates])\n             :inputs (get @(rf/subscribe [::subs/inputs]) organ)\n             :selected-vis @(rf/subscribe [::subs/selected-vis])\n             }\n\n        ;; We use all of S0 till it gets to be too slow. May need to query tool and vis here.\n        ;; Switching s0 is enough\n        s0 all-S0\n        s0-for-day (model/S0-for-day s0 day)\n\n        cox? (model/use-cox-adjusted? tool)\n        sum-betas (map #(fac/sum-beta-xs env %) beta-keys)\n        F (model/cox-adjusted s0 sum-betas)\n        #_(if cox? ;false #_(= (:selected-vis env) \"test\")\n            (model/cox s0-for-day sum-betas)\n            (model/cox-adjusted s0 sum-betas))\n\n        env (conj env\n                  [:sum-betas sum-betas]\n                  [:s0 s0]\n                  [:s0-for-day s0-for-day]\n                  [:cox? cox?]\n                  [:F F] ;; is this needed ?\n                  )\n        inputs (:inputs env)\n        required-inputs (keys fmaps)\n        fulfilled-inputs (select-keys inputs required-inputs)\n        missing #_false (< (count fulfilled-inputs) (count required-inputs))\n        unknowns (some #(= (get inputs %) :unknown) required-inputs)\n        overlay (if missing :missing (if unknowns :unknowns nil))]\n    [:div {:style {:background-color \"#fff\"\n                   :border (str \"3px solid \" (condp = overlay\n                                               :missing \"rgb(255,0,0)\"\n                                               :unknowns \"teal\"\n                                               nil \"#CCC\"))\n                   :border-radius 5\n                   :margin-top 30\n                   :margin-bottom 20\n                   :padding \"20px 5px 5px 15px\"\n                   :position \"relative\"}}\n     (condp = overlay\n       :missing [:<>\n                 [:div {:style {:z-index 1000\n                                :color \"rgb(255,0,0)\"\n                                :border \"3px solid rgb(255,0,0)\"\n                                :border-radius 5\n                                :background-color \"#fec\"\n                                :padding \"2px 5px\"\n                                :position \"absolute\"\n                                :top \"-20px\"\n                                :right \"20px\"}}\n                  \"Warning: some inputs are missing\"]\n                 [:div {:style {:z-index 500\n                                :background-color rgb/theme\n                                :padding 0\n                                :position \"absolute\"\n                                :top 0\n                                :right 0\n                                :bottom 0\n                                :left 0\n                                :display \"flex\"\n                                :align-items \"center\"\n                                :justify-content \"center\"}}\n                  [:h2 {:flex \"auto\"\n                        :style {:color \"#fff\"\n                                :text-align \"center\"\n                                :width 400}}\n                   \"Results will appear here once all inputs have been entered.\"]]]\n       :unknowns [:<>\n                  [:div {:style {:z-index 1000\n                                 :color \"teal\"\n                                 :border \"3px solid teal\"\n                                 :border-radius 5\n                                 :background-color \"#fec\"\n                                 :padding \"2px 5px\"\n                                 :position \"absolute\"\n                                 :top \"-20px\"\n                                 :right \"20px\"}}\n                   \"Average values were used for some inputs\"]\n                  [:div {:style {:z-index 500\n                                 :background-color \"#fec2\"\n                                 :padding 0\n                                 :position \"absolute\"\n                                 :pointer-events \"none\" ; to allow click through\n                                 :top 0\n                                 :right 0\n                                 :bottom 0\n                                 :left 0}}]]\n       nil nil)\n     \n     [:section\n      [ui/tabs {:variant \"pills\" :default-active-key (:selected-vis env)\n                :active-key (:selected-vis env)\n                :on-select #(rf/dispatch [::events/selected-vis %])}\n       [ui/tab {:event-key \"bars\" :title \"Bar Chart\"}\n        [vis/bar-chart env]]\n\n       [ui/tab {:event-key \"area\" :title \"Area Chart\"}\n        [vis/area-chart env]]\n\n       [ui/tab {:event-key \"icons\" :title \"Icon Array\"}\n        [vis/icon-array env]]\n\n       [ui/tab {:event-key \"table\" :title \"Table\"}\n        [vis/table env]]\n       \n       [ui/tab {:event-key \"text\" :title \"Text\"}\n        [vis/text env]]\n       \n       #_[ui/tab {:variant \"secondary\"\n                :event-key \"test\" :title \"[Test]\"}\n        [vis/test-rig (conj env\n                            [:rubric [[:h4 \"Test Rig\"]]]\n                            [:bar-info nil])]]]]]))\n"]}