{
"version":3,
"file":"module$node_modules$graphlib$lib$alg$prim.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtG,IAAIC,EAAIH,OAAA,CAAQ,yCAAR,CAAR,CACII,MAAQJ,OAAA,CAAQ,wCAAR,CADZ,CAEIK,cAAgBL,OAAA,CAAQ,sDAAR,CAEpBC,OAAOC,CAAAA,OAAP,CAEAI,QAAa,CAACC,CAAD,CAAIC,UAAJ,CAAgB,CAM3BC,QAASA,gBAAe,CAACC,IAAD,CAAO,CAC7B,IAAIC,EAAID,IAAKE,CAAAA,CAAL,GAAWA,UAAX,CAAeF,IAAKC,CAAAA,CAApB,CAAwBD,IAAKE,CAAAA,CAArC,CACIC,IAAMC,EAAGC,CAAAA,QAAH,CAAYJ,CAAZ,CACEK,KAAAA,EAAZ,GAAIH,GAAJ,GACMI,IACJ,CADiBT,UAAA,CAAWE,IAAX,CACjB,CAAIO,IAAJ,CAAiBJ,GAAjB,GACEK,OAAA,CAAQP,CAAR,CACA,CADaC,UACb,CAAAE,EAAGK,CAAAA,QAAH,CAAYR,CAAZ,CAAeM,IAAf,CAFF,CAFF,CAH6B;AAL/B,IAAIG,OAAS,IAAIhB,KAAjB,CACIc,QAAU,EADd,CAEIJ,GAAK,IAAIT,aAeb,IAAsB,CAAtB,GAAIE,CAAEc,CAAAA,SAAF,EAAJ,CACE,MAAOD,OAGTjB,EAAEmB,CAAAA,IAAF,CAAOf,CAAEgB,CAAAA,KAAF,EAAP,CAAkB,QAAQ,CAACX,CAAD,CAAI,CAC5BE,EAAGU,CAAAA,GAAH,CAAOZ,CAAP,CAAUa,MAAOC,CAAAA,iBAAjB,CACAN,OAAOO,CAAAA,OAAP,CAAef,CAAf,CAF4B,CAA9B,CAMAE,GAAGK,CAAAA,QAAH,CAAYZ,CAAEgB,CAAAA,KAAF,EAAA,CAAU,CAAV,CAAZ,CAA0B,CAA1B,CAGA,KADA,IAAIK,KAAO,CAAA,CACX,CAAmB,CAAnB,CAAOd,EAAGe,CAAAA,IAAH,EAAP,CAAA,CAAsB,CACpB,IAAAjB,WAAIE,EAAGgB,CAAAA,SAAH,EACJ,IAAI3B,CAAE4B,CAAAA,GAAF,CAAMb,OAAN,CAAeN,UAAf,CAAJ,CACEQ,MAAOY,CAAAA,OAAP,CAAepB,UAAf,CAAkBM,OAAA,CAAQN,UAAR,CAAlB,CADF,KAEO,CAAA,GAAIgB,IAAJ,CACL,KAAUK,MAAJ,CAAU,gCAAV,CAA6C1B,CAA7C,CAAN,CAEAqB,IAAA,CAAO,CAAA,CAHF,CAMPrB,CAAE2B,CAAAA,SAAF,CAAYtB,UAAZ,CAAeuB,CAAAA,OAAf,CAAuB1B,eAAvB,CAVoB,CAatB,MAAOW,OA5CoB,CAPyE;",
"sources":["node_modules/graphlib/lib/alg/prim.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphlib$lib$alg$prim\"] = function(global,require,module,exports) {\nvar _ = require(\"../lodash\");\nvar Graph = require(\"../graph\");\nvar PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph();\n  var parents = {};\n  var pq = new PriorityQueue();\n  var v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v;\n    var pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","_","Graph","PriorityQueue","prim","g","weightFunc","updateNeighbors","edge","w","v","pri","pq","priority","undefined","edgeWeight","parents","decrease","result","nodeCount","each","nodes","add","Number","POSITIVE_INFINITY","setNode","init","size","removeMin","has","setEdge","Error","nodeEdges","forEach"]
}
