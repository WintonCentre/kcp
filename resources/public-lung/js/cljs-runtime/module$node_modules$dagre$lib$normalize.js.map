{
"version":3,
"file":"module$node_modules$dagre$lib$normalize.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpG,IAAIC,EAAIH,OAAA,CAAQ,sCAAR,CAAR,CACII,KAAOJ,OAAA,CAAQ,oCAAR,CAEXC,OAAOC,CAAAA,OAAP,CAAiB,CACfG,IAoBFA,QAAY,CAACC,CAAD,CAAI,CACdA,CAAEC,CAAAA,KAAF,EAAUC,CAAAA,WAAV,CAAwB,EACxBL,EAAEM,CAAAA,OAAF,CAAUH,CAAEI,CAAAA,KAAF,EAAV,CAAqB,QAAQ,CAACC,IAAD,CAAO,CAIpC,IAAIC,EAJmDD,IAI7CC,CAAAA,CAAV,CACIC,MALgDP,CAKtCQ,CAAAA,IAAF,CAAOF,CAAP,CAAUG,CAAAA,IADtB,CAEIC,EANmDL,IAM7CK,CAAAA,CAFV,CAGIC,MAPgDX,CAOtCQ,CAAAA,IAAF,CAAOE,CAAP,CAAUD,CAAAA,IAHtB,CAIIG,KARmDP,IAQ1CO,CAAAA,IAJb,CAKIC,UATgDb,CASlCK,CAAAA,IAAF,CATuCA,IASvC,CALhB,CAMIS,UAAYD,SAAUC,CAAAA,SAE1B,IAAIH,KAAJ,GAAcJ,KAAd,CAAsB,CAAtB,CAAA,CAZoDP,CAclDe,CAAAA,UAAF,CAduDV,IAcvD,CAGK,KAAAW,EAAI,CAAT,KAAY,EAAET,KAAd,CAAqBA,KAArB,CAA6BI,KAA7B,CAAoC,EAAEK,CAAF,CAAK,EAAET,KAA3C,CAAkD,CAChDM,SAAUI,CAAAA,MAAV;AAAmB,EACnB,KAAAC,MAAQ,CACNC,MAAO,CADD,CACIC,OAAQ,CADZ,CAEKP,SAFL,CAEgBQ,QArB6BhB,IAmB7C,CAGNI,KAAMF,KAHA,CAKR,KAAAe,MAAQxB,IAAKyB,CAAAA,YAAL,CAxB0CvB,CAwB1C,CAAqB,MAArB,CAA6BkB,KAA7B,CAAoC,IAApC,CACJX,MAAJ,GAAcO,SAAd,GACEI,KAAMC,CAAAA,KAGN,CAHcN,SAAUM,CAAAA,KAGxB,CAFAD,KAAME,CAAAA,MAEN,CAFeP,SAAUO,CAAAA,MAEzB,CADAF,KAAMI,CAAAA,KACN,CADc,YACd,CAAAJ,KAAMM,CAAAA,QAAN,CAAiBX,SAAUW,CAAAA,QAJ7B,CAzBkDxB,EA+BhDyB,CAAAA,OAAF,CAAUnB,CAAV,CAAagB,KAAb,CAAoB,CAAEI,OAAQb,SAAUa,CAAAA,MAApB,CAApB,CAAkDd,IAAlD,CACU,EAAV,GAAII,CAAJ,EAhCkDhB,CAiC9CC,CAAAA,KAAF,EAAUC,CAAAA,WAAYyB,CAAAA,IAAtB,CAA2BL,KAA3B,CAEFhB,EAAA,CAAIgB,KAlB4C,CAjBEtB,CAsClDyB,CAAAA,OAAF,CAAUnB,CAAV,CAAaI,CAAb,CAAgB,CAAEgB,OAAQb,SAAUa,CAAAA,MAApB,CAAhB,CAA8Cd,IAA9C,CA1BA,CAZoC,CAApC,CAFc,CArBC,CAEfgB,KA8DFA,QAAa,CAAC5B,CAAD,CAAI,CACfH,CAAEM,CAAAA,OAAF,CAAUH,CAAEC,CAAAA,KAAF,EAAUC,CAAAA,WAApB,CAAiC,QAAQ,CAACI,CAAD,CAAI,CAC3C,IAAIE,KAAOR,CAAEQ,CAAAA,IAAF,CAAOF,CAAP,CAAX,CACIuB,UAAYrB,IAAKK,CAAAA,SAGrB;IADAb,CAAEyB,CAAAA,OAAF,CAAUjB,IAAKa,CAAAA,OAAf,CAAwBQ,SAAxB,CACA,CAAOrB,IAAKc,CAAAA,KAAZ,CAAA,CAAmB,CACjB,IAAAZ,EAAIV,CAAE8B,CAAAA,UAAF,CAAaxB,CAAb,CAAA,CAAgB,CAAhB,CACJN,EAAE+B,CAAAA,UAAF,CAAazB,CAAb,CACAuB,UAAUZ,CAAAA,MAAOU,CAAAA,IAAjB,CAAsB,CAAEK,EAAGxB,IAAKwB,CAAAA,CAAV,CAAaC,EAAGzB,IAAKyB,CAAAA,CAArB,CAAtB,CACmB,aAAnB,GAAIzB,IAAKc,CAAAA,KAAT,GACEO,SAAUG,CAAAA,CAGV,CAHcxB,IAAKwB,CAAAA,CAGnB,CAFAH,SAAUI,CAAAA,CAEV,CAFczB,IAAKyB,CAAAA,CAEnB,CADAJ,SAAUV,CAAAA,KACV,CADkBX,IAAKW,CAAAA,KACvB,CAAAU,SAAUT,CAAAA,MAAV,CAAmBZ,IAAKY,CAAAA,MAJ1B,CAMAd,EAAA,CAAII,CACJF,KAAA,CAAOR,CAAEQ,CAAAA,IAAF,CAAOF,CAAP,CAXU,CALwB,CAA7C,CADe,CAhEA,CANmF;",
"sources":["node_modules/dagre/lib/normalize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dagre$lib$normalize\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","_","util","run","g","graph","dummyChains","forEach","edges","edge","v","vRank","node","rank","w","wRank","name","edgeLabel","labelRank","removeEdge","i","points","attrs","width","height","edgeObj","dummy","addDummyNode","labelpos","setEdge","weight","push","undo","origLabel","successors","removeNode","x","y"]
}
