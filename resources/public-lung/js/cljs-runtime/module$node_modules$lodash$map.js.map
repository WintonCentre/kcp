{
"version":3,
"file":"module$node_modules$lodash$map.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,8BAAA,CAAmD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACvFC,SAAWH,OAAA,CAAQ,sCAAR,CAD4E,CAEvFI,aAAeJ,OAAA,CAAQ,0CAAR,CAFwE,CAGvFK,QAAUL,OAAA,CAAQ,qCAAR,CAH6E,CAIvFM,QAAUN,OAAA,CAAQ,oCAAR,CAiDdC,OAAOC,CAAAA,OAAP,CALAK,QAAY,CAACC,UAAD,CAAaC,QAAb,CAAuB,CAEjC,MAAO,CADIH,OAAA,CAAQE,UAAR,CAAAE,CAAsBP,QAAtBO,CAAiCL,OACrC,EAAKG,UAAL,CAAiBJ,YAAA,CAAaK,QAAb,CAAuB,CAAvB,CAAjB,CAF0B,CAhDwD;",
"sources":["node_modules/lodash/map.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$map\"] = function(global,require,module,exports) {\nvar arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arrayMap","baseIteratee","baseMap","isArray","map","collection","iteratee","func"]
}
