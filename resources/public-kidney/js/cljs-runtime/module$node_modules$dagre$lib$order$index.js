shadow$provide.module$node_modules$dagre$lib$order$index=function(global,require,module,exports){function buildLayerGraphs(g,ranks,relationship){return _.map(ranks,function(rank){return buildLayerGraph(g,rank,relationship)})}function sweepLayerGraphs(layerGraphs,biasRight){var cg=new Graph;_.forEach(layerGraphs,function(lg){var root=lg.graph().root;root=sortSubgraph(lg,root,cg,biasRight);_.forEach(root.vs,function(v,i){lg.node(v).order=i});addSubgraphConstraints(lg,cg,root.vs)})}function assignOrder(g,
layering){_.forEach(layering,function(layer){_.forEach(layer,function(v,i){g.node(v).order=i})})}var _=require("module$node_modules$dagre$lib$lodash"),initOrder=require("module$node_modules$dagre$lib$order$init_order"),crossCount=require("module$node_modules$dagre$lib$order$cross_count"),sortSubgraph=require("module$node_modules$dagre$lib$order$sort_subgraph"),buildLayerGraph=require("module$node_modules$dagre$lib$order$build_layer_graph"),addSubgraphConstraints=require("module$node_modules$dagre$lib$order$add_subgraph_constraints"),
Graph=require("module$node_modules$dagre$lib$graphlib").Graph,util=require("module$node_modules$dagre$lib$util");module.exports=function(g){var maxRank=util.maxRank(g),downLayerGraphs=buildLayerGraphs(g,_.range(1,maxRank+1),"inEdges");maxRank=buildLayerGraphs(g,_.range(maxRank-1,-1,-1),"outEdges");var layering=initOrder(g);assignOrder(g,layering);for(var bestCC=Number.POSITIVE_INFINITY,best,i=0,lastBest=0;4>lastBest;++i,++lastBest){sweepLayerGraphs(i%2?downLayerGraphs:maxRank,2<=i%4);layering=util.buildLayerMatrix(g);
var cc=crossCount(g,layering);cc<bestCC&&(lastBest=0,best=_.cloneDeep(layering),bestCC=cc)}assignOrder(g,best)}}
//# sourceMappingURL=module$node_modules$dagre$lib$order$index.js.map
