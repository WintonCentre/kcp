{"version":3,"sources":["svg/space.cljs"],"mappings":";AAKA,kBAAA,0BAAAA,5CAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAAA,TAE4CW;YAF5C,AAAAT,4CAAAF,eAAA,nEAAqBI;aAArB,AAAAF,4CAAAF,eAAA,pEAA2BK;cAA3B,AAAAH,4CAAAF,eAAA,rEAAkCM;eAAlC,AAAAJ,4CAAAF,eAAA,tEACsBO;cADtB,AAAAL,4CAAAF,eAAA,rEAC+BQ;eAD/B,AAAAN,4CAAAF,eAAA,tEAEsBS;cAFtB,AAAAP,4CAAAF,eAAA,rEAE+BU;AAF/B,AAGE,YAAA,2CAAA,mVAAA,tYAAME,0GAAe,CAAA,CAAG,AAAA,qFAAQR,SAAO,AAAA,mFAAOC,WAAQ,AAAA,qFAAQA,kEACzC,CAAA,CAAG,AAAA,uFAASD,SAAO,AAAA,kFAAMC,WAAQ,AAAA,wFAASA;IACzDQ,QAAM,CAAA,CAAG,AAAA,qFAAQD,SAAO,AAAA,mFAAON,YAAS,AAAA,qFAAQA;IAChDQ,SAAO,CAAA,CAAG,AAAA,uFAASF,SAAO,AAAA,kFAAMN,YAAS,AAAA,wFAASA;AAHxD,AAME,mEAAA,gHAAA,qVAAA,2VAAA,6LAAA,zhCAACS,qDAAMJ,+DACEC,+GACA,CAAA,CAAG,AAAA,qFAAQA,SAAO,AAAA,mFAAON,YAAS,AAAA,qFAAQA,mEACzC,CAAA,CAAG,AAAA,uFAASM,SAAO,AAAA,kFAAMN,YAAS,AAAA,wFAASA,yDAChD,gCAAA,mFAAA,nHAACU,uBAAYT,gGAAYM,cAAOL,yDAChC,gCAAA,0FAAA,1HAACQ,uBAAYP,4FAAUK,mBAAUJ;;AAI1C","names":["p__68047","map__68048","cljs.core/--destructure-map","cljs.core.get","svg.space/space","outer","margin","padding","x-domain","x-ticks","y-domain","y-ticks","params","inner","width","height","cljs.core.assoc","svg.scales/nice-linear"],"sourcesContent":["(ns svg.space\n  (:require\n            [svg.scales :refer [nice-linear]]\n            ))\n\n(defn space [{:keys [outer margin padding\n                      x-domain x-ticks\n                      y-domain y-ticks] :as params}]\n  (let [inner {:width  (- (:width outer) (:left margin) (:right margin))\n               :height (- (:height outer) (:top margin) (:bottom margin))}\n        width (- (:width inner) (:left padding) (:right padding))\n        height (- (:height inner) (:top padding) (:bottom padding))]\n    ;(println \"x-domain\" [0 width] x-ticks)\n    ;(println \"y-domain\" [height 0] y-ticks)\n    (assoc params\n      :inner inner\n      :width (- (:width inner) (:left padding) (:right padding))\n      :height (- (:height inner) (:top padding) (:bottom padding))\n      :x (nice-linear x-domain [0 width] x-ticks)\n      :y (nice-linear y-domain [height 0] y-ticks)\n      ))\n  )\n\n(comment\n  (sort (keys (space {:outer    {:width 600 :height 300}\n                       :margin   {:top 20 :right 20 :bottom 20 :left 20}\n                       :padding  {:top 30 :right 30 :bottom 30 :left 30}\n                       :x-domain [0 2000]\n                       :x-ticks  10\n                       :y-domain [0 100]\n                       :y-ticks  5})))\n  ;=> {:y #svg.scales.Linear{:in [0 100], :out [200 0], :tick-count 5},\n  ; :y-domain [0 100],\n  ; :x-domain [0 2000],\n  ; :width 500,\n  ; :x-ticks 10,\n  ; :inner {:width 560, :height 260},\n  ; :padding {:top 30, :right 30, :bottom 30, :left 30},\n  ; :x #svg.scales.Linear{:in [0 2000], :out [0 500],\n  ; :tick-count 10},\n  ; :outer {:width 600, :height 300},\n  ; :y-ticks 5, :height 200,\n  ; :margin {:top 20, :right 20, :bottom 20, :left 20}}\n  )"]}