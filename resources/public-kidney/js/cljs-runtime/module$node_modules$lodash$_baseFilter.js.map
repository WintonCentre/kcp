{
"version":3,
"file":"module$node_modules$lodash$_baseFilter.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACnG,IAAIC,SAAWH,OAAA,CAAQ,sCAAR,CAoBfC,OAAOC,CAAAA,OAAP,CAVAE,QAAmB,CAACC,mBAAD,CAAaC,SAAb,CAAwB,CACzC,IAAIC,OAAS,EACbJ,SAAA,CAASE,mBAAT,CAAqB,QAAQ,CAACG,KAAD,CAAQC,KAAR,CAAeJ,UAAf,CAA2B,CAClDC,SAAA,CAAUE,KAAV,CAAiBC,KAAjB,CAAwBJ,UAAxB,CAAJ,EACEE,MAAOG,CAAAA,IAAP,CAAYF,KAAZ,CAFoD,CAAxD,CAKA,OAAOD,OAPkC,CAXwD;",
"sources":["node_modules/lodash/_baseFilter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseFilter\"] = function(global,require,module,exports) {\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseEach","baseFilter","collection","predicate","result","value","index","push"]
}
