{
"version":3,
"file":"module$node_modules$lodash$isArrayLikeObject.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACrGC,YAAcH,OAAA,CAAQ,wCAAR,CADuF,CAErGI,aAAeJ,OAAA,CAAQ,yCAAR,CA+BnBC,OAAOC,CAAAA,OAAP,CAJAG,QAA0B,CAACC,KAAD,CAAQ,CAChC,MAAOF,aAAA,CAAaE,KAAb,CAAP,EAA8BH,WAAA,CAAYG,KAAZ,CADE,CA7BuE;",
"sources":["node_modules/lodash/isArrayLikeObject.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isArrayLikeObject\"] = function(global,require,module,exports) {\nvar isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isArrayLike","isObjectLike","isArrayLikeObject","value"]
}
