{
"version":3,
"file":"module$node_modules$lodash$_baseIteratee.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACjGC,YAAcH,OAAA,CAAQ,yCAAR,CADmF,CAEjGI,oBAAsBJ,OAAA,CAAQ,iDAAR,CAF2E,CAGjGK,SAAWL,OAAA,CAAQ,qCAAR,CAHsF,CAIjGM,QAAUN,OAAA,CAAQ,oCAAR,CAJuF,CAKjGO,SAAWP,OAAA,CAAQ,qCAAR,CA0BfC,OAAOC,CAAAA,OAAP,CAjBAM,QAAqB,CAACC,KAAD,CAAQ,CAG3B,MAAoB,UAApB,EAAI,MAAOA,MAAX,CACSA,KADT,CAGa,IAAb,EAAIA,KAAJ,CACSJ,QADT,CAGoB,QAApB;AAAI,MAAOI,MAAX,CACSH,OAAA,CAAQG,KAAR,CAAA,CACHL,mBAAA,CAAoBK,KAAA,CAAM,CAAN,CAApB,CAA8BA,KAAA,CAAM,CAAN,CAA9B,CADG,CAEHN,WAAA,CAAYM,KAAZ,CAHN,CAKOF,QAAA,CAASE,KAAT,CAdoB,CAdwE;",
"sources":["node_modules/lodash/_baseIteratee.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseIteratee\"] = function(global,require,module,exports) {\nvar baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseMatches","baseMatchesProperty","identity","isArray","property","baseIteratee","value"]
}
