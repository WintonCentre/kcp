shadow$provide.module$node_modules$dagre$lib$normalize=function(global,require,module,exports){var _=require("module$node_modules$dagre$lib$lodash"),util=require("module$node_modules$dagre$lib$util");module.exports={run:function(g){g.graph().dummyChains=[];_.forEach(g.edges(),function(edge){var v=edge.v,vRank=g.node(v).rank,w=edge.w,wRank=g.node(w).rank,name=edge.name,edgeLabel=g.edge(edge),labelRank=edgeLabel.labelRank;if(wRank!==vRank+1){g.removeEdge(edge);var i=0;for(++vRank;vRank<wRank;++i,++vRank){edgeLabel.points=
[];var attrs={width:0,height:0,edgeLabel,edgeObj:edge,rank:vRank};var dummy=util.addDummyNode(g,"edge",attrs,"_d");vRank===labelRank&&(attrs.width=edgeLabel.width,attrs.height=edgeLabel.height,attrs.dummy="edge-label",attrs.labelpos=edgeLabel.labelpos);g.setEdge(v,dummy,{weight:edgeLabel.weight},name);0===i&&g.graph().dummyChains.push(dummy);v=dummy}g.setEdge(v,w,{weight:edgeLabel.weight},name)}})},undo:function(g){_.forEach(g.graph().dummyChains,function(v){var node=g.node(v),origLabel=node.edgeLabel;
for(g.setEdge(node.edgeObj,origLabel);node.dummy;){var w=g.successors(v)[0];g.removeNode(v);origLabel.points.push({x:node.x,y:node.y});"edge-label"===node.dummy&&(origLabel.x=node.x,origLabel.y=node.y,origLabel.width=node.width,origLabel.height=node.height);v=w;node=g.node(v)}})}}}
//# sourceMappingURL=module$node_modules$dagre$lib$normalize.js.map
