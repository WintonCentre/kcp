shadow$provide.module$node_modules$uncontrollable$lib$cjs$utils=function(global,require,module,exports){function readOnlyPropType(handler,name){return function(props,propName){if(void 0!==props[propName]&&!props[handler])return Error("You have provided a `"+propName+"` prop to `"+name+"` without an `"+(handler+"` handler prop. This will render a read-only field. If the field should be mutable use `")+(defaultKey(propName)+"`. Otherwise, set `")+(handler+"`."))}}function defaultKey(key){return"default"+
key.charAt(0).toUpperCase()+key.substr(1)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.uncontrolledPropTypes=function(controlledValues,displayName){var propTypes={};Object.keys(controlledValues).forEach(function(prop){propTypes[defaultKey(prop)]=noop;var handler=controlledValues[prop];"string"===typeof handler&&handler.trim().length?void 0:(0,_invariant.default)(!1,"Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable",
displayName,prop);propTypes[prop]=readOnlyPropType(handler,displayName)});return propTypes};exports.isProp=function(props,prop){return void 0!==props[prop]};exports.defaultKey=defaultKey;exports.canAcceptRef=function(component){return!!component&&("function"!==typeof component||component.prototype&&component.prototype.isReactComponent)};var _invariant=global(require("module$node_modules$invariant$browser")),noop=function(){}}
//# sourceMappingURL=module$node_modules$uncontrollable$lib$cjs$utils.js.map
